{
  "openapi": "3.0.4",
  "info": {
    "title": "Ecommerce.API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Brand/CreateBrand": {
      "post": {
        "tags": [
          "Brand"
        ],
        "summary": "Creates a new brand.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Brand/EditBrand": {
      "put": {
        "tags": [
          "Brand"
        ],
        "summary": "Updates the name of an existing brand.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/CreateNewProduct": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Adds a new product to the specified store and brand.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewProductDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/DeleteByName": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Soft deletes a product by name.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdentifierDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdentifierDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdentifierDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/RecoverByName": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Recovers a soft deleted product by name.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdentifierDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdentifierDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductIdentifierDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/EditProduct": {
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Edits an existing product's details.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProductDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditProductDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditProductDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/GetAllByStoreAndBrand": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Retrieves all products for a given store and brand.",
        "parameters": [
          {
            "name": "storeName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brandName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Store/CreateStore": {
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Creates a new store for the authenticated user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Store/DeleteByName/{storeName}": {
      "delete": {
        "tags": [
          "Store"
        ],
        "summary": "Soft deletes (deactivates) a store by name for the authenticated user.",
        "parameters": [
          {
            "name": "storeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Store/UpdateStore": {
      "put": {
        "tags": [
          "Store"
        ],
        "summary": "Updates store details for the authenticated user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStoreDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Store/UnassignBrand/{storeName}": {
      "put": {
        "tags": [
          "Store"
        ],
        "summary": "Unassigns a brand from a store for the authenticated user.",
        "parameters": [
          {
            "name": "storeName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/RegisterUser": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Registers a new user.",
        "requestBody": {
          "description": "User registration details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/Login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Authenticates a user and returns a JWT token.",
        "requestBody": {
          "description": "Login credentials.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/ChangePassword": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Changes the authenticated user's password.",
        "requestBody": {
          "description": "Change password data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/ResetPassword": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Resets the authenticated user's password.",
        "requestBody": {
          "description": "Reset password data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/UpdateProfile": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Updates the authenticated user's profile.",
        "requestBody": {
          "description": "New profile details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/User/confirmEmail": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Sends a confirmation email and marks email as confirmed.",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "Email to confirm.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressDto": {
        "type": "object",
        "properties": {
          "addressLine": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordDTO": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditBrandDto": {
        "type": "object",
        "properties": {
          "currentName": {
            "type": "string",
            "nullable": true
          },
          "newName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditProductDTO": {
        "type": "object",
        "properties": {
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "newProductName": {
            "type": "string",
            "nullable": true
          },
          "newPrice": {
            "type": "number",
            "format": "double"
          },
          "newImageURL": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewProductDTO": {
        "type": "object",
        "properties": {
          "productName": {
            "type": "string",
            "nullable": true
          },
          "imageURL": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NewStoreDto": {
        "type": "object",
        "properties": {
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/AddressDto"
          }
        },
        "additionalProperties": false
      },
      "NewUserDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "profilePictureURL": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductIdentifierDTO": {
        "type": "object",
        "properties": {
          "storeName": {
            "type": "string",
            "nullable": true
          },
          "productName": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDTO": {
        "type": "object",
        "properties": {
          "newPassword": {
            "type": "string",
            "nullable": true
          },
          "confirmedNewPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAddressDto": {
        "type": "object",
        "properties": {
          "addressLine": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UpdateProfileDTO": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "profilePictureUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateStoreDto": {
        "type": "object",
        "properties": {
          "currentStoreName": {
            "type": "string",
            "nullable": true
          },
          "newStoreName": {
            "type": "string",
            "nullable": true
          },
          "logoUrl": {
            "type": "string",
            "nullable": true
          },
          "brandName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/UpdateAddressDto"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter your JWT token here",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}